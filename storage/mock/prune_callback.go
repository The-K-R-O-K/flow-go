// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	cid "github.com/ipfs/go-cid"
	mock "github.com/stretchr/testify/mock"
)

// PruneCallback is an autogenerated mock type for the PruneCallback type
type PruneCallback struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *PruneCallback) Execute(_a0 cid.Cid) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(cid.Cid) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPruneCallback creates a new instance of PruneCallback. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPruneCallback(t interface {
	mock.TestingT
	Cleanup(func())
}) *PruneCallback {
	mock := &PruneCallback{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
