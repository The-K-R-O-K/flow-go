// Code generated by mockery v2.13.0. DO NOT EDIT.

package mock

import (
	state "github.com/onflow/flow-go/fvm/state"
	mock "github.com/stretchr/testify/mock"
)

// StateHolderOption is an autogenerated mock type for the StateHolderOption type
type StateHolderOption struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *StateHolderOption) Execute(_a0 *state.StateHolder) {
	_m.Called(_a0)
}

type NewStateHolderOptionT interface {
	mock.TestingT
	Cleanup(func())
}

// NewStateHolderOption creates a new instance of StateHolderOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStateHolderOption(t NewStateHolderOptionT) *StateHolderOption {
	mock := &StateHolderOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
